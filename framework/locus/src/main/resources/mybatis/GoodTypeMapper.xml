<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.zxy.web.framework.locus.repository.mybatis.GoodTypeMyBatisDao">
    <resultMap id="goodTypeDetail" type="GoodType">
        <id column="type_id" property="id" />
        <result column="type_create_date" property="createDate" />
        <result column="type_typeName" property="typeName" />
        <result column="type_leaf" property="leaf" />
        <association property="parent" column="parent_id" javaType="GoodType">
            <id column="parent_id" property="id" />
            <result column="parent_create_date" property="createDate" />
            <result column="parent_typeName" property="typeName" />
            <result column="parent_leaf" property="leaf" />
        </association>
        <collection property="typeList" javaType="GoodType">
            <id property="id" column="child_id" />
            <result column="child_create_date" property="createDate" />
            <result column="child_typeName" property="typeName" />
            <result column="child_leaf" property="leaf" />
        </collection>
    </resultMap>

    <!-- 加载全部的CHILD注意我们这里是没有递归的，是无法做到这样子的，在GoodTypeMyBatisDaoServiceTest有具体的测试 -->
    <select id="findAll" resultMap="goodTypeDetail">
        SELECT
            t.id AS type_id,
            t.create_date AS type_create_type,
            t.typeName AS type_typeName,
            t.leaf AS type_leaf,
            m.id AS parent_id,
            m.create_date AS parent_create_date,
            m.typeName AS parent_typeName,
            m.leaf AS parent_leaf,
            n.id AS child_id,
            n.create_date AS child_create_date,
            n.typeName AS child_typeName,
            n.leaf AS child_leaf
        FROM
            xz_good_type t
        LEFT OUTER JOIN xz_good_type m ON t.parent_id = m.id
        LEFT OUTER JOIN xz_good_type n ON n.parent_id = t.id
        WHERE
        t.parent_id != '0'
    </select>

    <!-- 这里为找到第一层树的数据 -->
    <select id="findChildById" parameterType="string" resultMap="goodTypeDetail">
        SELECT
            t.id AS type_id,
            t.create_date AS type_create_type,
            t.typeName AS type_typeName,
            t.leaf AS type_leaf,
            m.id AS parent_id,
            m.create_date AS parent_create_date,
            m.typeName AS parent_typeName,
            m.leaf AS parent_leaf,
            n.id AS child_id,
            n.create_date AS child_create_date,
            n.typeName AS child_typeName,
            n.leaf AS child_leaf
        FROM
            xz_good_type t
        LEFT OUTER JOIN xz_good_type m ON t.parent_id = m.id
        LEFT OUTER JOIN xz_good_type n ON n.parent_id = t.id
        WHERE
            t.parent_id = #{id}
    </select>

    <insert id="save" parameterType="GoodType">
        INSERT INTO xz_good_type
        VALUES(#{})
    </insert>

</mapper>